Kubernetes ConfigMaps & Secrets ‚Äì Manage Configuration Safely

- Kubernetes provides two ways to manage configuration outside your application code:

1Ô∏è‚É£ ConfigMap
- Stores non-sensitive configuration as key-value pairs.
- Keeps config separate from resource manifests.

Example
apiVersion: v1
kind: ConfigMap
metadata:
 name: app-config
data:
 USERNAME: "admin"
 APP_MODE: "development"

Use in a Pod:
envFrom:
 - configMapRef:
 name: app-config

2Ô∏è‚É£ Secret
- Stores sensitive information (passwords, API keys).
- Values are base64 encoded.

Example
apiVersion: v1
kind: Secret
metadata:
 name: db-secret
type: Opaque
data:
 DB_PASS: cGFzc3dvcmQ= # "password" encoded in base64

Use in a Pod
envFrom:
 - secretRef:
 name: db-secret

üí° Takeaway:
- ConfigMap: For general configuration (USERNAME, APP_MODE)
- Secret: For sensitive data (DB_PASS, API_KEYS)
