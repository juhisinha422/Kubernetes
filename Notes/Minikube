🚀 What is Minikube? Your Local Kubernetes Playground!

Want to explore Kubernetes (K8s) without cloud costs? Meet Minikube a lightweight, local single-node K8s cluster perfect for testing, learning, and development before going live!

✔ Fast & Easy Setup – No cloud provider required
✔ Learn K8s Core Concepts – Ideal for beginners & pros
✔ Cross-Platform – Runs on Windows, macOS, and Linux
✔ Customizable – Defaults to one node (expandable if needed)

📋 Minikube Requirements
Before diving in, ensure your system meets these:
💻 2+ CPUs |  2GB+ Free RAM | 💽 20GB+ Disk Space
🌐 Internet Connection | 🐋 Docker / VM Manager (VirtualBox, Hyper-V, etc.)

📦 What is a Pod?
A Pod is the smallest deployable unit in K8s, containing:
🔸 One or more containers (like Docker) running together
🔸 Ephemeral by nature – Short-lived, replaceable
🔸 Can be single-container (common) or multi-container (for tightly coupled apps)

🔑 Key Points About Pods
✅ K8s manages Pods, not containers directly
✅ Pods need an image, config & resource limits at creation
✅ Two ways to create Pods:
1️ Imperative (kubectl commands) – Quick & easy
kubectl run mypod --image=nginx

2️ Declarative (YAML manifests) – Best for reproducibility & version control
---
apiVersion: v1
kind: Pod
metadata:
 name: my-first-pod
spec:
 containers:
  - name: nginx
   image: nginx
   ports:
    - containerPort: 80
Apply with:
 kubectl apply -f demo.yaml
 
⚡ Quick Minikube Setup Guide

1️ Prep Your Environment
Launch an EC2 instance with
Instance Type: t2.medium (or equivalent)
Memory: 2+ CPUs, 2GB+ RAM
Storage: Min. 20GB (25GB recommended)
OS: Ubuntu/Linux preferred

2️ Install Docker & Minikube
sudo apt install docker.io -y
curl -LO https://lnkd.in/enAERWWf
sudo install minikube-linux-amd64 /usr/local/bin/minikube

3️ Start Minikube
minikube start --driver=docker --force

4️ Verify Your Cluster
 kubectl get pods -A

🚀 Why Use Minikube?
🔹 Zero-cost K8s learning
🔹 Ideal for CI/CD testing
🔹 Perfect for local development before cloud deployment
