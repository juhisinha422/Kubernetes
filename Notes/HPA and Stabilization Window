HPA and Stabilization Window in Kubernetes :

1. HPA (Horizontal Pod Autoscaler)

HPA is a Kubernetes resource that automatically adjusts the number of pod replicas in a Deployment/ReplicaSet/StatefulSet based on CPU, memory, or custom metrics.

Why? â†’ To ensure the application scales up under load and scales down when demand is low.


Example:

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
 name: my-app-hpa
spec:
 scaleTargetRef:
 apiVersion: apps/v1
 kind: Deployment
 name: my-app
 minReplicas: 2
 maxReplicas: 10
 metrics:
 - type: Resource
 resource:
 name: cpu
 target:
 type: Utilization
 averageUtilization: 70 # target average CPU usage per pod

ðŸ“Œ Behavior:

If average CPU > 70%, HPA adds pods.

If average CPU < 70%, HPA removes pods (but not below minReplicas).


2. Stabilization Window

A stabilization window is a cooldown period that prevents HPA from making scaling decisions too quickly or too frequently.

It avoids flapping (frequent up-and-down scaling).

You can set different stabilization windows for scale up and scale down.


Example:

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
 name: my-app-hpa
spec:
 scaleTargetRef:
 apiVersion: apps/v1
 kind: Deployment
 name: my-app
 minReplicas: 2
 maxReplicas: 10
 behavior:
 scaleUp:
 stabilizationWindowSeconds: 0 # scale up immediately
 scaleDown:
 stabilizationWindowSeconds: 300 # wait 5 mins before scaling down
 metrics:
 - type: Resource
 resource:
 name: cpu
 target:
 type: Utilization
 averageUtilization: 70

ðŸ“Œ Behavior:

If load spikes â†’ new pods are added immediately (no delay).

If load drops â†’ HPA waits 5 minutes before removing pods, ensuring the drop isnâ€™t just temporary.


âœ… In short:

HPA â†’ Scales pods automatically based on metrics.

Stabilization Window â†’ Adds a buffer time to prevent rapid scaling changes, especially scale down.
